# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  #config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  config.vm.define "ci" do |ci|
    ci.vm.box = "bento/centos-6.7"
    # if this is false have to run 'vagrant box outdated' to find updates
    ci.vm.box_check_update = true
    ci.vm.hostname = "lab-ci"

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    ci.vm.network "private_network", ip: "192.168.10.18"

    # Enable provisioning with a shell script. 
    ci.vm.provision "shell", inline: <<-SHELL

    /bin/cat > client.rb <<EOF
      log_level        :info
      log_location     STDOUT
      chef_repo_path   '/var/chef'
EOF

    /bin/cat > settings.json <<EOF
    {
      "chef-server": {
      "configuration": "notification_email 'kristan.stewart@gmail.com'",
      "addons": [
         "manage"
       ]
       },
       "run_list":[
       "recipe[chef-server::default]","recipe[chef-server::addons]","recipe[jenkins::master]"
       ]
    }
EOF
      # install chef-solo
      curl -L https://www.chef.io/chef/install.sh | sudo bash
      # create required bootstrap dirs/files
      sudo mkdir -p /var/chef/cache /var/chef/cookbooks
      # pull down the main cookbooks we want
      wget -qO- https://supermarket.chef.io/cookbooks/java/download  | sudo tar xvzC /var/chef/cookbooks
      wget -qO- https://supermarket.chef.io/cookbooks/jenkins/download | sudo tar xvzC /var/chef/cookbooks
      wget -qO- https://supermarket.chef.io/cookbooks/chef-server/download | sudo tar xvzC /var/chef/cookbooks
      # pull down dependency cookbooks
      for dep in chef-ingredient yum-chef yum apt-chef apt packagecloud runit
      do
        wget -qO- https://supermarket.chef.io/cookbooks/${dep}/download | sudo tar xvzC /var/chef/cookbooks
      done
      # GO GO GO!!!
      sudo chef-client -z -j settings.json -c client.rb
    SHELL
  end

  config.vm.define "gitlab" do |gitlab|
    gitlab.vm.box = "bento/centos-6.7"
    # if this is false have to run 'vagrant box outdated' to find updates
    gitlab.vm.box_check_update = true
    gitlab.vm.hostname = "lab-gitlab"

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    gitlab.vm.network "private_network", ip: "192.168.10.17"
  end


  config.vm.define "chefdk" do |chefdk|

    chefdk.vm.box = "bento/centos-6.7"
    # if this is false have to run 'vagrant box outdated' to find updates
    chefdk.vm.box_check_update = true
    chefdk.vm.hostname = "lab-wrkstn"

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    chefdk.vm.network "private_network", ip: "192.168.10.20"

        # Enable provisioning with a shell script. 
    chefdk.vm.provision "shell", inline: <<-SHELL

    /bin/cat > client.rb <<EOF
      log_level        :info
      log_location     STDOUT
      chef_repo_path   '/var/chef'
EOF

    /bin/cat > settings.json <<EOF
    {
      "chef_dk": {
        "global_shell_init": "true"
       },
       "run_list":[
         "recipe[chef-dk::default]"
       ]
    }
EOF
      # install chef-solo
      curl -L https://www.chef.io/chef/install.sh | sudo bash
      # create required bootstrap dirs/files
      sudo mkdir -p /var/chef/cache /var/chef/cookbooks
      # pull down the main cookbooks we want
      wget -qO- https://supermarket.chef.io/cookbooks/chef-dk/download  | sudo tar xvzC /var/chef/cookbooks
      # pull down dependency cookbooks
      for dep in dmg
      do
        wget -qO- https://supermarket.chef.io/cookbooks/${dep}/download | sudo tar xvzC /var/chef/cookbooks
      done
      # GO GO GO!!!
      sudo chef-client -z -j settings.json -c client.rb
    SHELL
  end

  config.vm.provider "virtualbox" do |vb|
    # Disable display the VirtualBox GUI when booting the machine
     vb.gui = false
  
     # Customize the amount of memory on the VM:
     vb.memory = "1024"
  end
end
